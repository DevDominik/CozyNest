import React, { useState } from "react";
import ReactMarkdown from "react-markdown";
import style from "./Documentation.module.css";

const sections = [
  { id: "home", label: "Home (F≈ëoldal)" },
  { id: "auth", label: "Auth (Bejelentkez√©s / Regisztr√°ci√≥)" },
  { id: "contact", label: "Contact (Kapcsolatfelv√©tel)" },
  { id: "reserve", label: "ReserveRoom (Szoba foglal√°sa)" },
  { id: "reservations", label: "Reservations (Foglal√°saim)" },
  { id: "profile", label: "Profil" },
];

const markdownContent = {
  home: `
## üè† Home (F≈ëoldal)

### üìã Le√≠r√°s:
A nyit√≥oldal, ahol r√∂vid bemutatkoz√°s √©s √°ttekint√©s tal√°lhat√≥ a CozyNest rendszerr≈ël.

### ‚úÖ Funkci√≥k:
- Alap inform√°ci√≥k a szolg√°ltat√°sr√≥l.
- Navig√°ci√≥ m√°s oldalakra (foglal√°s, profil stb.).

### ‚ö†Ô∏è Lehets√©ges hib√°k:
- Ha valami hiba t√∂rt√©nik az adatok bet√∂lt√©se k√∂zben:  
  **Hiba√ºzenet:** ‚ÄûAz adatok bet√∂lt√©se sikertelen. K√©rj√ºc, friss√≠tse az oldalt.‚Äù
`,
  auth: `
## üîê Auth (Bejelentkez√©s / Regisztr√°ci√≥)

### üìã Le√≠r√°s:
Felhaszn√°l√≥k bel√©phetnek a fi√≥kjukba vagy √∫j fi√≥kot hozhatnak l√©tre.

### ‚úÖ Funkci√≥k:
- Bejelentkez√©s e-maillel √©s jelsz√≥val.
- √öj fi√≥k l√©trehoz√°sa.
- Jelsz√≥ biztons√°gi szab√°lyok ellen≈ërz√©se.

### ‚ö†Ô∏è Lehets√©ges hib√°k:
- Hib√°s bejelentkez√©si adatok:  
  **Hiba√ºzenet:** ‚ÄûHib√°s e-mail vagy jelsz√≥.‚Äù
- M√°r regisztr√°lt e-mail:  
  **Hiba√ºzenet:** ‚ÄûEz az e-mail c√≠m m√°r haszn√°latban van.‚Äù
`,
  contact: `
## ‚úâÔ∏è Contact (Kapcsolatfelv√©tel)

### üìã Le√≠r√°s:
Lehet≈ës√©g √ºzenetet k√ºldeni a CozyNest csapat√°nak.

### ‚úÖ Funkci√≥k:
- N√©v, e-mail, √ºzenet mez≈ëk kit√∂lt√©se.
- K√ºld√©s gomb.

### ‚ö†Ô∏è Lehets√©ges hib√°k:
- √úres mez≈ëk:  
  **Hiba√ºzenet:** ‚ÄûK√©rj√ºc, t√∂lts√∂n ki minden mez≈ët.‚Äù
- Hib√°s e-mail form√°tum:  
  **Hiba√ºzenet:** ‚Äû√ârv√©nytelen e-mail c√≠m.‚Äù
- Sikertelen k√ºld√©s:  
  **Hiba√ºzenet:** ‚ÄûAz √ºzenet elk√ºld√©se nem siker√ºlt. K√©rj√ºc, pr√≥b√°lja √∫jra k√©s≈ëbb.‚Äù
`,
  reserve: `## üõèÔ∏è ReserveRoom (Szoba foglal√°sa)

### üìã Le√≠r√°s:
Foglal√°s l√©trehoz√°sa sz≈±r√©si felt√©telek alapj√°n (id≈ëpont, √°r, f√©r≈ëhely).

### ‚úÖ Funkci√≥k:
- D√°tum kiv√°laszt√°sa.
- √År- √©s f√©r≈ëhely sz≈±r√©s.
- Szabad szob√°k list√°z√°sa.
- Foglal√°s lead√°sa.

### ‚ö†Ô∏è Lehets√©ges hib√°k:
- Nincs tal√°lat:  
  **Hiba√ºzenet:** ‚ÄûNincs el√©rhet≈ë szoba a megadott felt√©telekkel.‚Äù
- Hib√°s d√°tum intervallum:  
  **Hiba√ºzenet:** ‚ÄûA kezd≈ë d√°tum nem lehet k√©s≈ëbbi a befejez≈ë d√°tumn√°l.‚Äù
- Be nem jelentkezett felhaszn√°l√≥:  
  **Hiba√ºzenet:** ‚ÄûFoglal√°shoz k√©rj√ºk, jelentkezzen be.‚Äù`, // truncated for brevity
  reservations: `## üìÜ Reservations (Foglal√°saim)

### üìã Le√≠r√°s:
A felhaszn√°l√≥ eddigi √©s j√∂v≈ëbeni foglal√°sai.

### ‚úÖ Funkci√≥k:
- Foglal√°sok list√°z√°sa d√°tummal, st√°tusszal.
- Foglal√°s r√©szleteinek megtekint√©se.
- (Opcion√°lisan) Foglal√°s lemond√°sa.

### ‚ö†Ô∏è Lehets√©ges hib√°k:
- Nincs m√©g foglal√°s:  
  **√úzenet:** ‚ÄûM√©g nem rendelkezik foglal√°ssal.‚Äù
- Bet√∂lt√©si hiba:  
  **Hiba√ºzenet:** ‚ÄûNem siker√ºlt bet√∂lteni a foglal√°sokat.‚Äù`, // truncated for brevity
  profile: `## üë§ Profil

### üìã Le√≠r√°s:
Felhaszn√°l√≥i adatok megtekint√©se √©s szerkeszt√©se.

### ‚úÖ Funkci√≥k:
- N√©v, e-mail, jelsz√≥ m√≥dos√≠t√°sa.
- Profilk√©p felt√∂lt√©s (ha van ilyen funkci√≥).
- El≈ëfizet√©s kezel√©se (ha van ilyen funkci√≥).

### ‚ö†Ô∏è Lehets√©ges hib√°k:
- √úres k√∂telez≈ë mez≈ë:  
  **Hiba√ºzenet:** ‚ÄûMinden mez≈ë kit√∂lt√©se k√∂telez≈ë.‚Äù
- Jelsz√≥ t√∫l r√∂vid vagy gyenge:  
  **Hiba√ºzenet:** ‚ÄûA jelsz√≥nak minimum 8 karakter hossz√∫nak kell lennie.‚Äù
- Sikertelen ment√©s:  
  **Hiba√ºzenet:** ‚ÄûA v√°ltoztat√°sok ment√©se nem siker√ºlt.‚Äù`, // truncated for brevity
};

const Documentation = () => {
  const [activeSection, setActiveSection] = useState("home");

  return (
    <div className={style.container}>
      <aside className={style.sidebar}>
        <h2>Dokument√°ci√≥</h2>
        <ul>
          {sections.map((section) => (
            <li key={section.id}>
              <button
                className={
                  activeSection === section.id ? style.activeLink : style.link
                }
                onClick={() => setActiveSection(section.id)}
              >
                {section.label}
              </button>
            </li>
          ))}
        </ul>
      </aside>
      <main className={style.content}>
        <ReactMarkdown>{markdownContent[activeSection]}</ReactMarkdown>
      </main>
    </div>
  );
};

export default Documentation;
